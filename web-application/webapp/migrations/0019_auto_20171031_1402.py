# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-10-31 08:02
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('webapp', '0018_merge_20171029_1647'),
    ]

    operations = [
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=250, verbose_name='ФИО')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('date_time_reservation', models.DateTimeField(verbose_name='Дата и время бронирование')),
                ('status', models.BooleanField(default=False, verbose_name='Статус')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, verbose_name='Номер телефона')),
                ('specialist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specialist_reservations', to='webapp.Specialist')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_reservations', to=settings.AUTH_USER_MODEL, verbose_name='Кто бронировал')),
            ],
            options={
                'verbose_name_plural': 'предварительные заказы',
                'verbose_name': 'Предварительный заказ',
            },
        ),
        migrations.AlterModelOptions(
            name='rating',
            options={'ordering': ['created_at'], 'verbose_name': 'Рейтинг', 'verbose_name_plural': 'Рейтинги (Отзывы)'},
        ),
        migrations.AlterModelManagers(
            name='rating',
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
    ]
